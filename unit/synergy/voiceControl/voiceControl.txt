控制步骤：
        * 去除空格字符
        * 不搜索预定义的房间名
	* 提取动作
	* 提取设备名称来确定设备、提取房间来过滤设备
        * 根据匹配模式进行过滤
	* 提取参数
	* 控制

控制体：
        {
                "controlString":"",
                "currentRoom":""
        }

匹配顺序
        优先组
        然后设备
        最后房间 + 类型
        如果有`所有`，只按房间 + 类型进行匹配


控制匹配模式：
        设备名、组名控制
        位置过滤：如果有该房间的设备或组，则只取该房间的设备或组。如果没有该房间的设备或组，则不过滤。
        控制效果：
                * 只控制说话区域的设备、组     开始匹配到了所有设备、组，最后用currentRoom过滤掉了
                * 控制指定区域的设备、组       匹配到的所有设备和组，先用指定区域过滤。用指定区域过滤后，就不会再用currentRoom进行过滤。
                * 控制所有区域的设备、组       开始匹配到了所有设备、组，因为没有设备或组属于currentRoom，所以currentRoom没有起到过滤作用。
        常见场景：
                在多个区域创建了多个组，不同区域中都有名称为`灯`的组。
                        开`灯`          客厅；        如果客厅有叫`灯`的组，则只打开该组。否则打开所有叫`灯`的组
                        开`窗帘`        客厅
                        开餐厅的`灯`    客厅；        如果餐厅有叫`灯`的组，则只打开餐厅中的叫`灯`的组
                        开餐厅的`窗帘`  客厅
                        开`餐厅的灯`    客厅；        如果有名为`餐厅的灯`分组，如果有该分组在客厅中，只打开客厅中的该组，否则打开所有区域的该组。

                匹配规则：
                        * 首先匹配constrolString中的设备名、组名称
                        * 再提取constrolString中的房间信息，对其进行过滤
                        * 再用currentRoom进行一次过滤。过滤规则是：如果有设备或组属于currentRoom，则只匹配currentRoom中的组。否则对组不进行过滤

        

        
        房间 + 类型匹配：
        位置过滤：忽略
        控制效果：
                * 控制区域内的所有设备或所有分组
        常见场景：      
                控制某个区域的所有灯组
                        打开客厅的灯  餐厅      如果没有叫`灯`的组，则打开客厅的所有分组
                        打开客厅的灯  客厅      如果没有叫`灯`的组，则打开客厅的所有分组
                        打开客厅的窗帘
                        打开客厅的所有灯 餐厅   如果有叫`灯`的组，则只能这样控制一个区域
                        打开客厅的所有窗帘


